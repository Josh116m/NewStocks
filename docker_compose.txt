# docker-compose.yml - Docker Compose configuration for Stock Trading System

version: '3.8'

services:
  # Main trading application
  trading-app:
    build: .
    container_name: stock-trading-predictor
    volumes:
      - ./data:/app/data
      - ./models:/app/models
      - ./checkpoints:/app/checkpoints
      - ./predictions:/app/predictions
      - ./logs:/app/logs
    environment:
      - PYTHONUNBUFFERED=1
      - CUDA_VISIBLE_DEVICES=0
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]
    command: python main_trading_system.py
    restart: unless-stopped

  # Jupyter notebook for analysis
  notebook:
    build: .
    container_name: trading-notebook
    ports:
      - "8888:8888"
    volumes:
      - ./:/app
    environment:
      - JUPYTER_ENABLE_LAB=yes
    command: jupyter lab --ip=0.0.0.0 --no-browser --allow-root
    depends_on:
      - trading-app

  # Redis for caching (optional)
  redis:
    image: redis:7-alpine
    container_name: trading-redis
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    command: redis-server --appendonly yes

  # PostgreSQL for storing predictions/results (optional)
  postgres:
    image: postgres:15-alpine
    container_name: trading-db
    environment:
      - POSTGRES_USER=trading
      - POSTGRES_PASSWORD=trading123
      - POSTGRES_DB=trading_system
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data

  # Grafana for monitoring (optional)
  grafana:
    image: grafana/grafana:latest
    container_name: trading-grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana-data:/var/lib/grafana
      - ./grafana/dashboards:/etc/grafana/provisioning/dashboards
      - ./grafana/datasources:/etc/grafana/provisioning/datasources

  # Prometheus for metrics (optional)
  prometheus:
    image: prom/prometheus:latest
    container_name: trading-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus-data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'

volumes:
  redis-data:
  postgres-data:
  grafana-data:
  prometheus-data:

networks:
  default:
    name: trading-network